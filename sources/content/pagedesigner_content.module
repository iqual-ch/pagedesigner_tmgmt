<?php

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\Plugin\DataType\EntityReference;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Language\LanguageInterface;
use Drupal\pagedesigner_content\PagedesignerItemProcessor;
use Drupal\tmgmt\JobCheckoutManager;
use Drupal\tmgmt\JobInterface;
use Drupal\tmgmt\JobItemInterface;
use Drupal\tmgmt\TMGMTException;
use Drupal\tmgmt_content\Plugin\tmgmt\Source\ContentEntitySource;

/**
 * Implements hook_field_info_alter().
 */
function pagedesigner_content_field_info_alter(&$info) {


	if (isset($info['pagedesigner_item'])) {
		$info['pagedesigner_item']['tmgmt_field_processor'] = PagedesignerItemProcessor::class;
	}
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function pagedesigner_content_form_node_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{

	if ($form_state->getFormObject()->getEntity()->id()) {
		/** @var \Drupal\node\Entity\Node $node */
		$node = \Drupal::entityTypeManager()->getStorage('node')->load($form_state->getFormObject()->getEntity()->id());
		$langcode = $form_state->getFormObject()->getEntity()->language()->getId();

		/*var_dump($node->getTranslation($langcode)->get('created')->getValue()[0]['value']);
		var_dump(time() - 10);
		die();*/
		// Check if the translation already exists. If so, offer a redirect
		// to tmgmt.
		if ($node->hasTranslation($langcode) && $node->getTranslation($langcode)->get('created')->getValue()[0]['value'] < time()-5) {
			$title = '/admin/tmgmt/sources/content/node?title=' . $form_state->getFormObject()->getEntity()->getUntranslated()->getTitle() . '&type=page';
			$form['retranslate'] = [
				'#type' => 'markup',
				'#markup' => t('<p>To overwrite the translate, go to <a href=" ' . $title. '">Content overview</a> and request translation. </p>'),
				'#weight' => 10
			];
			return;
		}

		$current_path = \Drupal::service('path.current')->getPath();
		$current_path = explode('/', $current_path);
		$target_lang = $current_path[count($current_path)-1];
		$src_lang = $form_state->getFormObject()->getEntity()->getUntranslated()->language()->getId();

		$job = tmgmt_job_create($src_lang, $target_lang, \Drupal::currentUser()->id());

		try {
			$job->addItem('content', 'node', $form_state->getFormObject()->getEntity()->id());
		} catch (\Drupal\tmgmt\TMGMTException $e) {
			\Drupal::messenger()->addMessage($e->getMessage(), 'warning');
			return ;
		}
		$text = count_chars_recursively($job->getData());
		$text = strip_tags($text);
		$text = str_replace(array('`', '~', '!', '@', '"', '#', '$', ';', '%', '^', ':', '?', '&', '*', '(', ')', '-', '_', '+', '=', '{', '}', '[', ']', '\\', '|', '/', '\'', '<', '>', ',', '.'), ' ', $text);
		// Remove duplicate spaces.
		$text =  trim(preg_replace('/ {2,}/', ' ', $text));
		// Turn into an array.
		$words = ($text) ? explode(' ', $text) : array();
		$letters = strlen(preg_replace('![^a-z]+!', '', strtolower($text)));
		$price = $letters * 0.00002;
		$form['deepl'] = [
			'#title' => 'Translate with Deepl',
			'#type' => 'checkbox',
			'#description' => 'Words: ' . count($words) . ', Letters: ' . $letters . ', Price: ' . $price . '$',
			'#weight' => 10,
			'#suffix' => ''
		];
		$job->abortTranslation();
		$form['actions']['submit']['#submit'][] = 'pagedesigner_content_form_node_form_submit';
	}
}

/**
 * Submit handler function for the domain form to create a theme copy.
 */
function pagedesigner_content_form_node_form_submit(&$form, FormStateInterface $form_state)
{
	$current_path = \Drupal::service('path.current')->getPath();
	$current_path = explode('/', $current_path);
	$target_lang = $current_path[count($current_path)-1];
	$src_lang = $form_state->getFormObject()->getEntity()->getUntranslated()->language()->getId();
	if ($form['deepl']['#value']) {
		$job = tmgmt_job_create($src_lang, $target_lang, \Drupal::currentUser()->id());
		$job->addItem('content', 'node', $form_state->getFormObject()->getEntity()->id());
		$job->translator = 'deepl_pro';
		$menu_link_manager = \Drupal::service('plugin.manager.menu.link');
		$result = $menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $form_state->getFormObject()->getEntity()->id()]);
		$menu_link = reset($result);
		$menu_link_entity = \Drupal::entityTypeManager()->getStorage('menu_link_content')->load($menu_link->getMetaData()['entity_id']);
		if ($menu_link_entity)
			$job->addItem('content',  $menu_link_entity->getEntityTypeId(), $menu_link_entity->id());
		$job->save();

		$batch = [
			'title' => t('Translating'),
			'operations' => [
				['pagedesigner_content_process_translation',[$job]],
			],
			'finished' => 'pagedesigner_content_finished_translation'
			//'file' => 'path_to_file_containing_myfunctions',
		];
		batch_set($batch);
	}
}
function pagedesigner_content_process_translation($job) {
	try {
		// Delete duplicates.
		if ($existing_items_ids = $job->getConflictingItemIds()) {
			$item_storage = \Drupal::entityTypeManager()->getStorage('tmgmt_job_item');
			$item_storage->delete($item_storage->loadMultiple($existing_items_ids));
		}
		$job->requestTranslation();
		$job->acceptTranslation();
		$job->save();
	}
	catch (TMGMTException $e) {
		watchdog_exception('tmgmt', $e);
	}
}

function pagedesigner_content_finished_translation() {
	\Drupal::messenger()->addStatus('Copied pagedesigner item.');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function pagedesigner_content_form_tmgmt_job_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
	$job = $form_state->getFormObject()->getEntity();

	$job_item = @array_pop($job->getItems());
	$text = count_chars_recursively($job->getData());
	$text = strip_tags($text);
	$text = str_replace(array('`', '~', '!', '@', '"', '#', '$', ';', '%', '^', ':', '?', '&', '*', '(', ')', '-', '_', '+', '=', '{', '}', '[', ']', '\\', '|', '/', '\'', '<', '>', ',', '.'), ' ', $text);
	// Remove duplicate spaces.
	$text =  trim(preg_replace('/ {2,}/', ' ', $text));
	// Turn into an array.
	$words = ($text) ? explode(' ', $text) : array();
	$letters = strlen(preg_replace('![^a-z]+!', '', strtolower($text)));
	$price = $letters * 0.00002;

	/*$form['job_items_wrapper']['suggestions']['container']['suggestions_list']['suggestions_table']['#header']['letters'] = t('Letters');
	$form['job_items_wrapper']['suggestions']['container']['suggestions_list']['suggestions_table']['#header']['price'] = t('Price');
	$form['job_items_wrapper']['suggestions']['container']['suggestions_list']['suggestions_table']['#options']['letters'] = $letters;
	$form['job_items_wrapper']['suggestions']['container']['suggestions_list']['suggestions_table']['#options']['price'] = $price;*/
	$form['info']['letter_count'] = array(
		'#type' => 'item',
		'#title' => t('Total letters'),
		'#markup' => number_format($letters),
		'#prefix' => '<div class="tmgmt-ui-word-count tmgmt-ui-info-item">',
		'#suffix' => '</div>',
	);
	$form['info']['price_count'] = array(
		'#type' => 'item',
		'#title' => t('Total price'),
		'#markup' => $price . '$',
		'#prefix' => '<div class="tmgmt-ui-word-count tmgmt-ui-info-item">',
		'#suffix' => '</div>',
	);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function pagedesigner_content_form_tmgmt_content_translate_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
	$languages = \Drupal::languageManager()->getLanguages();
	$lg_code = '';
	foreach ($languages as $langcode => $language) {
		if ($langcode == LanguageInterface::LANGCODE_DEFAULT) {
			// Never show language neutral on the overview.
			continue;
		}
		$lg_code = $langcode;
	}
	$current_path = \Drupal::service('path.current')->getPath();
	$url =  explode('/',explode('/translations', $current_path)[0]);
	$nid = end($url);


	$entity = \Drupal\node\Entity\Node::load($nid);

	if (isset($entity)) {
		$job = tmgmt_job_create($entity->language()->getId(), $lg_code, \Drupal::currentUser()->id());
		try {
			// Add the job item.
			$job->addItem('content', $entity->getEntityTypeId(), $entity->id());
			$job->translator = 'deepl_pro';
			$menu_link_manager = \Drupal::service('plugin.manager.menu.link');
			$result = $menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $entity->id()]);
			$menu_link = reset($result);
			$menu_link_entity = \Drupal::entityTypeManager()->getStorage('menu_link_content')->load($menu_link->getMetaData()['entity_id']);
			if ($menu_link_entity)
				$job->addItem('content',  $menu_link_entity->getEntityTypeId(), $menu_link_entity->id());
			$job->save();
		}
		catch (TMGMTException $e) {
			watchdog_exception('tmgmt', $e);
		}
		$text = count_chars_recursively($job->getData());
		$text = strip_tags($text);
		$text = str_replace(array('`', '~', '!', '@', '"', '#', '$', ';', '%', '^', ':', '?', '&', '*', '(', ')', '-', '_', '+', '=', '{', '}', '[', ']', '\\', '|', '/', '\'', '<', '>', ',', '.'), ' ', $text);
		// Remove duplicate spaces.
		$text =  trim(preg_replace('/ {2,}/', ' ', $text));
		// Turn into an array.
		$words = ($text) ? explode(' ', $text) : array();
		$letters = strlen(preg_replace('![^a-z]+!', '', strtolower($text)));
		$price = $letters * 0.00002;
		$storage = \Drupal::entityTypeManager()->getStorage('tmgmt_job');
		$entities = $storage->loadMultiple([$job->id()]);
		$storage->delete($entities);
		$form['label_price'] = [
			'#type' => 'label',
			'#title' => 'Words: ' . count($words) . ', Price: ' . $price . '$ per translation',
			'#weight' => 11,
		];
		$form['deepl'] = [
			'#value' => t('Translate selected languages with Deepl'),
			'#type' => 'submit',
			'#submit' => ['pagedesigner_content_submit_translations'],
			'#weight' => 10
		];
	}
}

function pagedesigner_content_submit_translations(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
	$entity =$form_state->get('entity');
	$values = $form_state->getValues();
	$operations = [];



	foreach (array_keys(array_filter($values['languages'])) as $langcode) {
		// Create the job object.
		try {
			$operations[] = ['pagedesigner_tmgmt_job_create_batch', [$entity, $langcode]];


			//$operations[] = ['pagedesigner_content_process_translation', [$job]];

		}
		catch (TMGMTException $e) {
			watchdog_exception('tmgmt', $e);
		}

	}
	$batch = [
		'title' => t('Translating'),
		'operations' => $operations,
		'finished' => 'pagedesigner_content_finished_translation'
	];
	batch_set($batch);
}

function pagedesigner_tmgmt_job_create_batch($entity, $langcode) {
	$menu_link_manager = \Drupal::service('plugin.manager.menu.link');
	$result = $menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $entity->id()]);
	$menu_link = reset($result);
	$menu_link_entity = \Drupal::entityTypeManager()->getStorage('menu_link_content')->load($menu_link->getMetaData()['entity_id']);
	$job = tmgmt_job_create($entity->getUntranslated()->language()->getId(), $langcode, \Drupal::currentUser()->id());
	// Add the job item.
	$job->addItem('content', $entity->getEntityTypeId(), $entity->id());
	if ($menu_link_entity)
		$job->addItem('content', $menu_link_entity->getEntityTypeId(), $menu_link_entity->id());

	$job->translator = 'deepl_pro';
	$job->save();
	pagedesigner_content_process_translation($job);
}
/**
 * Implements hook_form_FORM_ID_alter().
 */
function pagedesigner_content_form_node_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
	if ($form_state->getFormObject()->getEntity()->getUntranslated()->language()->getId() != $form_state->getFormObject()->getEntity()->language()->getId()) {
		$title = '/admin/tmgmt/sources/content/node?title=' . $form_state->getFormObject()->getEntity()->getUntranslated()->getTitle() . '&type=page';
		$form['retranslate'] = [
			'#type' => 'markup',
			'#markup' => t('<p>To overwrite the translate, go to <a href=" ' . $title. '">Content overview</a> and request translation. </p>'),
			'#weight' => 10
		];
	}
}

/**
 * Implements hook_entity_translation_create().
 */
function pagedesigner_content_entity_postsave(\Drupal\Core\Entity\EntityInterface $translation, $op)
{
	// Auto generate path aliases.
	if ($translation->id()) {
		\Drupal::service('pathauto.generator')->updateEntityAlias($translation, 'bulkupdate', ['message' => TRUE]);

	}
}

/**
 * Implements hook_tmgmt_source_suggestions().
 */
function pagedesigner_content_tmgmt_source_suggestions(array $items, JobInterface $job) {
	$suggestions = [];
	$items = $job->getItems();
	foreach ($items as $item) {
		if ($item instanceof JobItemInterface && $item->getPlugin() == 'content') {
			// Load the entity, skip if it can't be loaded.
			$entity = \Drupal::entityTypeManager()->getStorage($item->getItemType())->load($item->getItemId());
			if (!$entity || !($entity instanceof ContentEntityInterface)) {
				continue;
			}

			// Load translatable menu links.
			/** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
			$menu_link_manager = \Drupal::service('plugin.manager.menu.link');
			$result = $menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $entity->id()]);
			$menu_link = reset($result);
			if ($menu_link)
				$menu_link_entity = \Drupal::entityTypeManager()->getStorage('menu_link_content')->load($menu_link->getMetaData()['entity_id']);
			if ($menu_link_entity) {
				$suggestions[] = [
					'job_item' => tmgmt_job_item_create('content', $menu_link_entity->getEntityTypeId(), $menu_link_entity->id()),
					'reason' => t('Menu link @label', ['@label' => $menu_link_entity->label()]),
					'from_item' => $item->id(),
				];
			}
		}
	}

	return $suggestions;
}

/**
 * Implements hook_form_alter().
 */
function pagedesigner_content_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
	/*var_dump($form_id);
	die();*/
}

function count_chars_recursively($data) {
	if (is_array($data)) {
		if (isset($data['#translate']) && $data['#translate']) {
			return $data['#text'];
		}
		$result = "";
		foreach ($data as $key => $value) {
			$result .= count_chars_recursively($value);
		}
		return $result;
	}
	return "";
}